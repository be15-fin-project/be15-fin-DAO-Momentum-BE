<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.momentum.evaluation.eval.query.mapper.EvaluationManageMapper">

    <!-- 다면 평가 회차 목록 조회 -->
    <select id="findEvaluationRounds"
            parameterType="com.dao.momentum.evaluation.eval.query.dto.request.EvaluationRoundListRequestDto"
            resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationRoundResponseDto">
        SELECT
            r.round_id AS roundId,
            r.round_no AS roundNo,
            r.start_at AS startAt,
            DATE_ADD(r.start_at, INTERVAL 7 DAY) AS endAt,
            (
                SELECT COUNT(DISTINCT er.eval_id)
                FROM eval_response er
                WHERE er.round_id = r.round_id
            ) AS participantCount,
            CASE
                WHEN CURRENT_DATE &lt; r.start_at THEN 'BEFORE'
                WHEN CURRENT_DATE &gt; DATE_ADD(r.start_at, INTERVAL 7 DAY) THEN 'DONE'
                ELSE 'IN_PROGRESS'
            END AS status
        FROM eval_round r
        WHERE 1 = 1
            <if test="startDate != null">
                AND r.start_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND r.start_at &lt;= #{endDate}
            </if>
        ORDER BY r.start_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 다면 평가 회차 총 개수 조회 -->
    <select id="countEvaluationRounds"
            parameterType="com.dao.momentum.evaluation.eval.query.dto.request.EvaluationRoundListRequestDto"
            resultType="long">
        SELECT COUNT(*)
        FROM eval_round r
        WHERE 1 = 1
            <if test="startDate != null">
                AND r.start_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND r.start_at &lt;= #{endDate}
            </if>
    </select>

    <!-- 평가 종류 조회 -->
    <select id="findEvaluationForms"
            resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationFormResponseDto"
            parameterType="com.dao.momentum.evaluation.eval.query.dto.request.EvaluationFormListRequestDto">
        SELECT
            ef.form_id AS formId,
            ef.name AS name,
            ef.description AS description,
            et.type_id AS typeId,
            et.name AS typeName
        FROM eval_form ef
        JOIN eval_type et ON ef.type_id = et.type_id
        WHERE ef.is_active = 'Y'
            <if test="typeId != null">
                AND ef.type_id = #{typeId}
            </if>
        ORDER BY ef.form_id ASC
    </select>
    <!-- 평가 타입 목록 -->
    <select id="findAllEvalTypes" resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationTypeDto">
        SELECT
            et.type_id      AS typeId,
            et.name         AS typeName,
            et.description  AS description
        FROM eval_type et
        ORDER BY et.type_id
    </select>

    <!-- 평가 양식 목록 (활성화된 것만) -->
    <select id="findAllActiveForms" resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationFormDto">
        SELECT
            ef.form_id     AS formId,
            ef.name        AS formName,
            ef.description AS description,
            ef.type_id     AS typeId
        FROM eval_form ef
        WHERE ef.is_active = 'Y'
        ORDER BY ef.type_id, ef.form_id
    </select>

    <!-- 평가 양식별 요인 조회 -->
    <select id="findFormProperties"
            parameterType="long"
            resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationFormPropertyDto">
        SELECT
            p.property_id   AS propertyId,
            p.name          AS name
        FROM eval_property p
        WHERE 1=1
        <if test="typeId != null">
            AND p.form_id = #{formId}
        </if>
        ORDER BY p.property_id
    </select>

    <!-- 평가 회차 번호 조회 -->
    <select id="findSimpleRounds" resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationRoundSimpleDto">
        SELECT
            round_id AS roundId,
            round_no AS roundNo
        FROM eval_round
        ORDER BY round_no DESC
    </select>

</mapper>
