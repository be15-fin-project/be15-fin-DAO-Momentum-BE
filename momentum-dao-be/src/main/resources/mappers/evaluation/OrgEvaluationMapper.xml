<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.momentum.evaluation.eval.query.mapper.OrgEvaluationMapper">

    <!-- 조직 평가 목록 조회 -->
    <select id="findOrgEvaluations" resultType="com.dao.momentum.evaluation.eval.query.dto.response.OrgEvaluationResponseDto">
        WITH RECURSIVE dept_tree AS (
            SELECT dept_id
            FROM department
            WHERE dept_id = #{deptId}
                AND is_deleted = 'N'
            UNION ALL
            SELECT d.dept_id
            FROM department d
            INNER JOIN dept_tree dt ON d.parent_dept_id = dt.dept_id
            WHERE d.is_deleted = 'N'
        )
        SELECT
            er.result_id AS resultId,
            er.eval_id AS empNo,
            e.name AS evalName,
            ef.name AS formName,
            r.round_no AS roundNo,
            er.score AS score,
            er.reason AS reason,
            DATE_FORMAT(er.created_at, '%Y-%m-%d') AS createdAt
        FROM eval_response er
        JOIN employee e ON er.eval_id = e.emp_id
        JOIN eval_form ef ON er.form_id = ef.form_id
        JOIN eval_round r ON er.round_id = r.round_id
        JOIN eval_type et ON ef.type_id = et.type_id
        WHERE et.name = 'ORG'
            <if test="empNo != null">AND er.eval_id = #{empNo}</if>
            <if test="formId != null">AND ef.form_id = #{formId}</if>
            <if test="roundNo != null">AND r.round_no = #{roundNo}</if>
            <if test="deptId != null">AND e.dept_id IN (SELECT dept_id FROM dept_tree)</if>
            <if test="positionId != null">AND e.position_id = #{positionId}</if>
        ORDER BY er.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>


    <select id="countOrgEvaluations"
            parameterType="com.dao.momentum.evaluation.eval.query.dto.request.OrgEvaluationListRequestDto"
            resultType="long">
        WITH RECURSIVE dept_tree AS (
            SELECT dept_id
            FROM department
            WHERE dept_id = #{deptId}
                AND is_deleted = 'N'
            UNION ALL
            SELECT d.dept_id
            FROM department d
            INNER JOIN dept_tree dt ON d.parent_dept_id = dt.dept_id
            WHERE d.is_deleted = 'N'
        )
        SELECT COUNT(*)
        FROM eval_response er
        JOIN employee e ON er.eval_id = e.emp_id
        JOIN eval_form ef ON er.form_id = ef.form_id
        JOIN eval_round r ON er.round_id = r.round_id
        JOIN eval_type et ON ef.type_id = et.type_id
        WHERE et.name = 'ORG'
            <if test="empNo != null">AND er.eval_id = #{empNo}</if>
            <if test="formId != null">AND ef.form_id = #{formId}</if>
            <if test="roundNo != null">AND r.round_no = #{roundNo}</if>
            <if test="deptId != null">AND e.dept_id IN (SELECT dept_id FROM dept_tree)</if>
            <if test="positionId != null">AND e.position_id = #{positionId}</if>
    </select>


    <!-- 조직 평가 상세 조회 -->
    <select id="findOrgEvaluationDetail" resultType="com.dao.momentum.evaluation.eval.query.dto.response.OrgEvaluationResponseDto">
        SELECT
            er.result_id AS resultId,
            e.emp_no AS empNo,
            e.name AS evalName,
            ef.name AS formName,
            r.round_no AS roundNo,
            er.score AS score,
            er.reason As reason,
            DATE_FORMAT(er.created_at, '%Y-%m-%d') AS createdAt
        FROM eval_response er
        JOIN employee e ON er.eval_id = e.emp_id
        JOIN eval_form ef ON er.form_id = ef.form_id
        JOIN eval_round r ON er.round_id = r.round_id
        JOIN eval_type et ON ef.type_id = et.type_id
        WHERE er.result_id = #{resultId}
            AND et.name = 'ORG'
    </select>

    <!-- 조직 평가 요인별 점수 조회 -->
    <select id="findOrgFactorScores" resultType="com.dao.momentum.evaluation.eval.query.dto.response.FactorScoreDto">
        SELECT
            ep.name AS propertyName,
            es.score AS score
        FROM eval_score es
        JOIN eval_property ep ON es.property_id = ep.property_id
        WHERE es.result_id = #{resultId}
    </select>
</mapper>
