<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.momentum.evaluation.hr.query.mapper.MyObjectionMapper">

    <!-- 1) 이의 제기 내역 조회 -->
    <select id="findMyObjections" resultType="com.dao.momentum.evaluation.hr.query.dto.request.MyObjectionRaw">
        SELECT
            o.objection_id      AS objectionId,
            o.result_id         AS resultId,
            r.round_no         AS roundNo,
            o.status_id         AS statusId,
            s.status_type       AS statusType,
            DATE_FORMAT(o.created_at, '%Y-%m-%d %H:%i:%s') AS createdAt,
            er.score            AS overallScore
        FROM hr_objection o
        JOIN eval_response er ON er.result_id = o.result_id
        JOIN eval_round r      ON er.round_id = r.round_id
        JOIN status s        ON s.status_id   = o.status_id
        WHERE er.target_id = #{empId}
            <if test="req.statusId != null">
                AND o.status_id = #{req.statusId}
            </if>
            <if test="req.roundId != null">
                AND r.round_id = #{req.roundId}
            </if>
        ORDER BY o.objection_id DESC
        LIMIT #{req.size} OFFSET #{req.getOffset}
    </select>

    <select id="countMyObjections" resultType="long">
        SELECT
            COUNT(*)
        FROM hr_objection o
        JOIN eval_response er ON er.result_id = o.result_id
        JOIN eval_round r      ON er.round_id = r.round_id
        WHERE er.target_id = #{empId}
            <if test="req.statusId != null">
                AND o.status_id = #{req.statusId}
            </if>
            <if test="req.roundId != null">
                AND r.round_id = #{req.roundId}
            </if>
    </select>

    <!-- 2) 이의 제기 상세 조회 -->
    <select id="findObjectionDetail"
            parameterType="long"
            resultType="com.dao.momentum.evaluation.hr.query.dto.response.ObjectionItemDto">
        SELECT
            o.objection_id                                 AS objectionId,
            er.result_id                                   AS resultId,
            e.emp_no                                       AS empNo,
            e.name                                         AS empName,
            DATE_FORMAT(er.created_at, '%Y-%m-%d %H:%i:%s') AS evaluatedAt,
            o.reason                                       AS objectionReason,
            s.status_type                                  AS statusType,
            o.response                                     AS responseReason
        FROM hr_objection o
        JOIN eval_response er
            ON er.result_id = o.result_id
        JOIN employee e
            ON e.emp_id     = er.target_id
        JOIN status s
            ON s.status_id  = o.status_id
        LEFT JOIN hr_weight w
            ON w.round_id   = er.round_id
        LEFT JOIN hr_rate r
            ON r.round_id   = er.round_id
        WHERE o.objection_id = #{objectionId}
    </select>

    <!-- 3) 요인별 점수 조회 -->
    <select id="findFactorScores"
            parameterType="long"
            resultType="com.dao.momentum.evaluation.hr.query.dto.response.FactorScoreDto">
        SELECT
            ep.property_id   AS propertyId,
            ep.name   AS propertyName,
            CASE
                WHEN es.score >= 95 THEN '탁월'
                WHEN es.score >= 85 THEN '우수'
                WHEN es.score >= 70 THEN '양호'
                WHEN es.score >= 60 THEN '주의'
                ELSE '미흡'
            END                     AS Score
        FROM eval_score es
        JOIN eval_property ep
            ON ep.property_id = es.property_id
        WHERE es.result_id = #{resultId}
        ORDER BY ep.property_id
    </select>


    <!-- 등급 비율 조회 -->
    <select id="findRateInfo"
            parameterType="long"
            resultType="com.dao.momentum.evaluation.hr.query.dto.response.RateInfo">
        SELECT
            r.rate_s AS rateS,
            r.rate_a AS rateA,
            r.rate_b AS rateB,
            r.rate_c AS rateC,
            r.rate_d AS rateD
        FROM eval_response er
        JOIN hr_rate r ON r.round_id = er.round_id
        WHERE er.result_id = #{resultId}
    </select>

    <!-- 가중치 정보 조회 -->
    <select id="findWeightInfo"
            parameterType="long"
            resultType="com.dao.momentum.evaluation.hr.query.dto.response.WeightInfo">
        SELECT
            w.perform_wt     AS weightPerform,
            w.team_wt        AS weightTeam,
            w.attitude_wt    AS weightAttitude,
            w.growth_wt      AS weightGrowth,
            w.engagement_wt  AS weightEngagement,
            w.result_wt      AS weightResult
        FROM eval_response er
        JOIN hr_weight w ON w.round_id = er.round_id
        WHERE er.result_id = #{resultId}
    </select>



</mapper>
