<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.momentum.evaluation.eval.query.mapper.EvaluationTaskMapper">

    <!-- 평가 태스크 목록 조회 -->
    <select id="findTasks"
            parameterType="map"
            resultType="com.dao.momentum.evaluation.eval.query.dto.response.EvaluationTaskResponseDto">

        <!-- SELF &amp; ORG -->
        SELECT
        r.round_no      AS roundNo,
        et.name         AS typeName,
        ef.form_id      AS formId,
        ef.name         AS formName,
        e.dept_id       AS deptId,
        NULL            AS targetEmpNo,
        e.name          AS targetName,
        CASE WHEN resp.result_id IS NOT NULL THEN TRUE ELSE FALSE END AS submitted,
        r.start_at      AS startAt
        FROM eval_round r
        JOIN eval_form  ef
        ON ef.type_id IN (2,3)
        AND (#{req.formId} = 0 OR ef.form_id = #{req.formId})
        JOIN eval_type  et  ON et.type_id = ef.type_id
        JOIN employee   e   ON e.emp_id = #{empId}
        LEFT JOIN eval_response resp
        ON resp.eval_id   = #{empId}
        AND resp.form_id   = ef.form_id
        AND resp.round_id  = r.round_id
        WHERE r.round_no = #{roundNo}

        UNION ALL

        <!-- PEER -->
        SELECT
        r.round_no      AS roundNo,
        et2.name        AS typeName,
        ef2.form_id     AS formId,
        ef2.name        AS formName,
        emp.dept_id     AS deptId,
        emp.emp_no      AS targetEmpNo,
        emp.name        AS targetName,
        CASE WHEN resp2.result_id IS NOT NULL THEN TRUE ELSE FALSE END AS submitted,
        r.start_at      AS startAt
        FROM eval_round r
        JOIN eval_form  ef2
        ON ef2.type_id = 1
        AND (#{req.formId} = 0 OR ef2.form_id = #{req.formId})
        JOIN eval_type  et2 ON et2.type_id = ef2.type_id

        <!-- 평가 대상자 목록 -->
        JOIN (
        <choose>
            <when test="req.formId == 0 or req.formId == 1">
                SELECT emp_id AS target_id
                FROM employee
                WHERE dept_id = (SELECT dept_id FROM employee WHERE emp_id = #{empId})
                AND emp_id != #{empId}
            </when>
            <when test="req.formId == 2">
                SELECT emp_id AS target_id
                FROM dept_head
                WHERE dept_id = (SELECT dept_id FROM employee WHERE emp_id = #{empId})
            </when>
            <when test="req.formId == 3">
                SELECT dh.emp_id AS target_id
                FROM dept_head dh
                WHERE dh.dept_id IN (
                SELECT dept_id
                FROM department
                WHERE parent_dept_id = (SELECT dept_id FROM employee WHERE emp_id = #{empId})
                )
            </when>
        </choose>
        ) t ON 1=1

        JOIN employee emp      ON emp.emp_id = t.target_id

        LEFT JOIN eval_response resp2
        ON resp2.eval_id    = #{empId}
        AND resp2.target_id  = t.target_id
        AND resp2.form_id    = ef2.form_id
        AND resp2.round_id   = r.round_id

        WHERE r.round_no = #{roundNo}

        ORDER BY roundNo DESC
        LIMIT #{req.size} OFFSET #{req.offset}

    </select>

    <!-- 전체 태스크 건수 조회 -->
    <select id="countTasks"
            parameterType="map"
            resultType="int">
        SELECT
        (
        -- SELF &amp; ORG count
        SELECT COUNT(*)
        FROM eval_round r
        JOIN eval_form ef
        ON ef.type_id IN (2,3)
        AND (#{req.formId} = 0 OR ef.form_id = #{req.formId})
        WHERE r.round_no = #{roundNo}
        )
        +
        (
        -- PEER count
        SELECT COUNT(*)
        FROM eval_round r
        JOIN eval_form ef2
        ON ef2.type_id = 1
        AND (#{req.formId} = 0 OR ef2.form_id = #{req.formId})
        JOIN (
        <choose>
            <when test="req.formId == 0 or req.formId == 1">
                SELECT emp_id AS target_id
                FROM employee
                WHERE dept_id = (SELECT dept_id FROM employee WHERE emp_id = #{empId})
                AND emp_id != #{empId}
            </when>
            <when test="req.formId == 2">
                SELECT emp_id AS target_id
                FROM dept_head
                WHERE dept_id = (SELECT dept_id FROM employee WHERE emp_id = #{empId})
            </when>
            <when test="req.formId == 3">
                SELECT dh.emp_id AS target_id
                FROM dept_head dh
                WHERE dh.dept_id IN (
                SELECT dept_id
                FROM department
                WHERE parent_dept_id = (SELECT dept_id FROM employee WHERE emp_id = #{empId})
                )
            </when>
        </choose>
        ) t ON 1=1
        WHERE r.round_no = #{roundNo}
        )
    </select>

    <!-- 최신 라운드 번호 조회 -->
    <select id="findLatestRoundNo"
            resultType="int">
        SELECT MAX(round_no)
        FROM eval_round
    </select>

</mapper>
