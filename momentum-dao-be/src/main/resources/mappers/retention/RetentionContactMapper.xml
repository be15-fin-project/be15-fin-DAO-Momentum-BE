<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.momentum.retention.interview.query.mapper.RetentionContactMapper">

    <select id="findContacts" resultType="com.dao.momentum.retention.interview.query.dto.response.RetentionContactItemDto">
        WITH RECURSIVE dept_tree AS (
            SELECT dept_id
            FROM department
            WHERE dept_id = #{req.deptId}
            AND is_deleted = 'N'
            UNION ALL
            SELECT d.dept_id
            FROM department d
            INNER JOIN dept_tree dt ON d.parent_dept_id = dt.dept_id
            WHERE d.is_deleted = 'N'
        )
        SELECT
            rc.retention_id AS retentionId,
            rc.created_at,
            t.emp_no AS targetNo,
            t.name AS targetName,
            d.name AS departmentName,
            p.name AS positionName,
            m.name AS managerName,
            rc.reason
        FROM retention_contact rc
        JOIN employee t ON rc.target_id = t.emp_id
        JOIN employee m ON rc.manager_id = m.emp_id
        LEFT JOIN department d ON t.dept_id = d.dept_id
        LEFT JOIN position p ON t.position_id = p.position_id
        WHERE rc.is_deleted = 'N'
            <if test="req.targetNo != null">
                AND t.emp_no = #{req.targetNo}
            </if>
            <if test="req.managerId != null">
                AND rc.manager_id = #{req.managerId}
            </if>
            <if test="req.managerNo != null">
                AND m.emp_no = #{req.managerNo}
            </if>
            <if test="req.deptId != null">
                AND t.dept_id IN (SELECT dept_id FROM dept_tree)
            </if>
            <if test="req.positionId != null">
                AND t.position_id = #{req.positionId}
            </if>
            <if test="req.startDate != null">
                AND rc.created_at &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null">
                AND rc.created_at &lt;= #{req.endDate}
            </if>
        ORDER BY rc.created_at DESC
        LIMIT #{req.size} OFFSET #{req.offset}
    </select>

    <select id="countContacts" resultType="int">
        WITH RECURSIVE dept_tree AS (
            SELECT dept_id
            FROM department
            WHERE dept_id = #{req.deptId}
            AND is_deleted = 'N'
            UNION ALL
            SELECT d.dept_id
            FROM department d
            INNER JOIN dept_tree dt ON d.parent_dept_id = dt.dept_id
            WHERE d.is_deleted = 'N'
        )
        SELECT COUNT(*)
        FROM retention_contact rc
        JOIN employee t ON rc.target_id = t.emp_id
        WHERE rc.is_deleted = 'N'
            <if test="req.targetNo != null">
                AND t.emp_no = #{req.targetNo}
            </if>
            <if test="req.managerId != null">
                AND rc.manager_id = #{req.managerId}
            </if>
            <if test="req.managerNo != null">
                AND t.emp_no = #{req.managerNo}
            </if>
            <if test="req.deptId != null">
                AND t.dept_id IN (SELECT dept_id FROM dept_tree)
            </if>
            <if test="req.positionId != null">
                AND t.position_id = #{req.positionId}
            </if>
            <if test="req.startDate != null">
                AND rc.created_at &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null">
                AND rc.created_at &lt;= #{req.endDate}
            </if>
    </select>

    <!-- 면담 상세 조회 -->
    <select id="findContactDetailById" resultType="com.dao.momentum.retention.interview.query.dto.response.RetentionContactDetailDto">
        SELECT
            rc.retention_id AS retentionId,
            t.name AS targetName,
            t.emp_no AS targetNo,
            d.name AS deptName,
            p.name AS positionName,
            rc.manager_id AS managerId,
            m.name AS managerName,
            rc.reason,
            rc.created_at,
            rc.response,
            rc.response_at,
            rc.feedback
        FROM retention_contact rc
        JOIN employee t ON rc.target_id = t.emp_id
        LEFT JOIN employee m ON rc.manager_id = m.emp_id
        LEFT JOIN department d ON t.dept_id = d.dept_id
        LEFT JOIN position p ON t.position_id = p.position_id
        WHERE rc.retention_id = #{retentionId}
            AND rc.is_deleted = 'N'
    </select>
</mapper>
