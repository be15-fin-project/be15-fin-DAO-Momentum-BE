<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.momentum.approve.query.mapper.ApproveDetailMapper">

    <!-- 결재 내역 상세 조회 -->
    <select id="getApproveDTO" resultType="com.dao.momentum.approve.query.dto.ApproveDTO">
        SELECT
            a.approve_id,
            a.parent_approve_id,
            s.status_type,
            a.emp_id,
            a.approve_title,
            a.approve_type,
            a.create_at,
            a.complete_at,
            e.name AS employee_name,
            d.name AS department_name,

            CASE
                WHEN a.emp_id = #{empId} THEN 'WRITER'
                WHEN ali.emp_id IS NOT NULL THEN 'APPROVAL'
                WHEN ar.emp_id IS NOT NULL THEN 'REFERENCE'
                WHEN #{isAdmin} = TRUE THEN 'MASTER'
            ELSE NULL
            END AS received_type

        FROM approve a
        JOIN employee e ON a.emp_id = e.emp_id
        JOIN department d ON e.dept_id = d.dept_id
        JOIN status s ON a.status_id = s.status_id

        LEFT JOIN approve_line al ON al.approve_id = a.approve_id
        LEFT JOIN approve_line_list ali
        ON ali.approve_line_id = al.approve_line_id
        AND ali.emp_id = #{empId}

        LEFT JOIN approve_ref ar
        ON ar.approve_id = a.approve_id
        AND ar.emp_id = #{empId}

        WHERE a.approve_id = #{approveId}
        AND (
            a.emp_id = #{empId}
            OR ali.emp_id IS NOT NULL
            OR ar.emp_id IS NOT NULL
            OR #{isAdmin} = TRUE
        )
    </select>

    <!-- 결재 내역 파일 조회 -->
    <select id="getApproveFiles" resultType="com.dao.momentum.approve.query.dto.ApproveFileDTO">
        SELECT
            name, s3_key, type
        FROM file
        WHERE approve_id = #{approveId}
    </select>

    <!-- 결재선 조회 -->
    <select id="getApproveLines" resultType="com.dao.momentum.approve.query.dto.ApproveLineDTO">
        SELECT
            al.approve_line_id,
            s.status_type,
            al.approve_id,
            al.approve_line_order,
            al.is_required_all
        FROM approve_line al
        JOIN status s ON al.status_id = s.status_id
        WHERE approve_id = #{approveId}
    </select>

    <!-- 결재선 목록 조회 -->
    <select id="getApproveLineList" resultType="com.dao.momentum.approve.query.dto.ApproveLineListDTO">
        SELECT
            al.approve_line_id,
            al.approve_line_list_id,
            s.status_type,
            al.emp_id,
            CONCAT(e.name, ' ', p.name) AS employee_display_name,
            d.name AS department_name,
            al.reason
        FROM approve_line_list al
        JOIN status s ON al.status_id = s.status_id
        JOIN employee e ON al.emp_id = e.emp_id
        JOIN department d ON e.dept_id = d.dept_id
        JOIN position p ON e.position_id = p.position_id
        WHERE approve_line_id = #{approveLineId}
    </select>

    <!-- 결재 참조자 조회 -->
    <select id="getApproveRefs" resultType="com.dao.momentum.approve.query.dto.ApproveRefDTO">
        SELECT
            CONCAT(e.name, ' ', p.name) AS employee_display_name,
            d.name AS department_name,
            ar.is_confirmed
        FROM approve_ref ar
        JOIN employee e ON ar.emp_id = e.emp_id
        JOIN department d ON e.dept_id = d.dept_id
        JOIN position p ON e.position_id = p.position_id
        WHERE approve_id = #{approveId};
    </select>

    <!-- 결재 종류별 상세 조회 -->
    <select id="getProposalDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.ApproveProposalDTO">
        SELECT
            content
        FROM approve_proposal
        WHERE approve_id = #{approveId}
    </select>

    <select id="getReceiptDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.ApproveReceiptDTO">
        SELECT
            receipt_type,
            store_name,
            address,
            amount,
            used_at
        FROM approve_receipt
        WHERE approve_id = #{approveId}
    </select>

    <select id="getCancelDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.ApproveCancelDTO">
        SELECT
            cancel_reason
        FROM approve_cancel
        WHERE approve_id = #{approveId}
    </select>

    <select id="getBusinessTripDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.BusinessTripDTO">
        SELECT
            type,
            place,
            start_date,
            end_date,
            reason,
            cost
        FROM business_trip
        WHERE approve_id = #{approveId}
    </select>

    <select id="getOvertimeDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.OvertimeDTO">
        SELECT
            start_at,
            end_at,
            break_time,
            reason
        FROM overtime
        WHERE approve_id = #{approveId}
    </select>

    <select id="getRemoteWorkDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.RemoteWorkDTO">
        SELECT
            start_date,
            end_date,
            reason
        FROM remote_work
        WHERE approve_id = #{approveId}
    </select>

    <select id="getVacationDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.VacationDTO">
        SELECT
            vt.vacation_type,
            v.start_date,
            v.end_date,
            v.reason
        FROM vacation v
        JOIN vacation_type vt ON v.vacation_type_id = vt.vacation_type_id
        WHERE approve_id = #{approveId}
    </select>

    <select id="getWorkCorrectionDetail" resultType="com.dao.momentum.approve.query.dto.approveTypeDTO.WorkCorrectionDTO">
        SELECT
            before_start_at,
            before_end_at,
            after_start_at,
            after_end_at,
            reason
        FROM work_correction
        WHERE approve_id = #{approveId}
    </select>

</mapper>