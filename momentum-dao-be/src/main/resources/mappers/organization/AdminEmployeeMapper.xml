<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.momentum.organization.employee.query.mapper.AdminEmployeeMapper">
    <select id="getEmployees" resultType="com.dao.momentum.organization.employee.query.dto.response.EmployeeSummaryDTO">
        SELECT
            emp.emp_id,
            emp.emp_no,
            emp.name,
            dept.dept_id,
            dept.name AS deptName,
            pos.position_id,
            pos.name AS positionName,
            GROUP_CONCAT(ur.user_role_name) AS userRolesInString,
            emp.join_date,
            emp.status
        FROM employee AS emp
        JOIN department AS dept ON emp.dept_id = dept.dept_id
        JOIN position AS pos ON emp.position_id = pos.position_id
        LEFT JOIN employee_roles AS erole ON emp.emp_id = erole.emp_id
        LEFT JOIN user_role AS ur ON erole.user_role_id = ur.user_role_id
        WHERE 1 = 1
        <if test="request.deptId != null">
            AND dept.dept_id = #{request.deptId}
        </if>
        <if test="request.positionId != null">
            AND pos.position_id = #{request.positionId}
        </if>
        <if test="request.userRole != null">
            AND ur.user_role_name = #{request.userRole}
        </if>
        <if test="request.searchStartDate != null">
            AND emp.join_date &gt;= #{request.searchStartDate}
        </if>
        <if test="request.searchEndDate != null">
            AND emp.join_date &lt;= #{request.searchEndDate}
        </if>
        GROUP BY emp.emp_id
        <choose>
            <when test="request.sortBy != null and request.sortBy.name() == 'POSITION'">
                ORDER BY -pos.level
            </when>
            <when test="request.sortBy != null and request.sortBy.name() == 'JOIN_DATE'">
                ORDER BY emp.join_date
            </when>
            <otherwise>
                ORDER BY emp.emp_id
            </otherwise>
        </choose>
        <if test="request.order != null and request.order.name() == 'DESC'">
            DESC
        </if>
        LIMIT #{request.limit} OFFSET #{request.offset}
    </select>

    <select id="countEmployees" resultType="java.lang.Long">
        SELECT
            COUNT(DISTINCT emp.emp_id)
        FROM employee AS emp
        JOIN department AS dept ON emp.dept_id = dept.dept_id
        JOIN position AS pos ON emp.position_id = pos.position_id
        LEFT JOIN employee_roles AS erole ON emp.emp_id = erole.emp_id
        LEFT JOIN user_role AS ur ON erole.user_role_id = ur.user_role_id
        WHERE 1 = 1
        <if test="request.deptId != null">
            AND dept.dept_id = #{request.deptId}
        </if>
        <if test="request.positionId != null">
            AND pos.position_id = #{request.positionId}
        </if>
        <if test="request.userRole != null">
            AND ur.user_role_name = #{request.userRole}
        </if>
        <if test="request.searchStartDate != null">
            AND emp.join_date &gt;= #{request.searchStartDate}
        </if>
        <if test="request.searchEndDate != null">
            AND emp.join_date &lt;= #{request.searchEndDate}
        </if>
    </select>

    <select id="getEmployeeDetails" resultType="com.dao.momentum.organization.employee.query.dto.response.EmployeeDTO">
        SELECT
            emp.emp_id,
            emp.emp_no,
            emp.name,
            emp.email,
            dept.dept_id,
            dept.name AS deptName,
            pos.position_id,
            pos.name AS positionName,
            GROUP_CONCAT(ur.user_role_name) AS userRolesInString,
            emp.gender,
            emp.address,
            emp.contact,
            emp.join_date,
            emp.status,
            emp.birth_date
        FROM employee AS emp
        JOIN department AS dept ON emp.dept_id = dept.dept_id
        JOIN position AS pos ON emp.position_id = pos.position_id
        LEFT JOIN employee_roles AS erole ON emp.emp_id = erole.emp_id
        LEFT JOIN user_role AS ur ON erole.user_role_id = ur.user_role_id
        WHERE emp.emp_id = #{empId}
        GROUP BY emp.emp_id
    </select>

    <select id="getEmployeeRecords" resultType="com.dao.momentum.organization.employee.query.dto.response.EmployeeRecordsDTO">
        SELECT
        record_id,
        emp_id,
        type,
        organization,
        start_date,
        end_date,
        name
        FROM employee_records
        WHERE emp_id = #{empId}
    </select>

    <select id="getAppoints" resultType="com.dao.momentum.organization.employee.query.dto.response.AppointDTO">
        SELECT
            app.appoint_id,
            app.emp_id,
            emp.emp_no,
            emp.name AS empName,
            app.before_position,
            bpos.name AS beforePositionName,
            app.after_position,
            apos.name AS afterPositionName,
            app.before_department,
            bdep.name AS beforeDeptName,
            app.after_department,
            adep.name AS afterDeptName,
            app.type,
            app.appoint_date
        FROM appoint AS app
        JOIN employee AS emp ON app.emp_id = emp.emp_id
        JOIN position AS bpos ON app.before_position = bpos.position_id
        JOIN position AS apos ON app.after_position = apos.position_id
        JOIN department AS bdep ON app.before_department = bdep.dept_id
        JOIN department AS adep ON app.after_department = adep.dept_id
        <where>
            <if test="request.deptId != null">
                adep.dept_id = #{request.deptId}
            </if>
            <if test="request.positionId != null">
                AND apos.position_id = #{request.positionId}
            </if>
            <if test="request.empId != null">
                AND emp.emp_id = #{request.empId}
            </if>
            <if test="request.empName != null and request.empName != ''">
                AND emp.name = #{request.empName}
            </if>
            <if test="request.type != null">
                AND app.type = #{request.type}
            </if>
            <if test="request.searchStartDate != null">
                AND app.appoint_date &gt;= #{request.searchStartDate}
            </if>
            <if test="request.searchEndDate != null">
                AND app.appoint_date &lt;= #{request.searchEndDate}
            </if>
        </where>
        <choose>
            <when test="request.order == null or request.order.name() == 'DESC'">
                ORDER BY app.appoint_date DESC
            </when>
            <otherwise>
                ORDER BY app.appoint_date
            </otherwise>
        </choose>
        LIMIT #{request.limit} OFFSET #{request.offset}
    </select>

    <select id="countAppoints" resultType="java.lang.Long">
        SELECT
            COUNT(app.appoint_id)
        FROM appoint AS app
        JOIN employee AS emp ON app.emp_id = emp.emp_id
        JOIN position AS bpos ON app.before_position = bpos.position_id
        JOIN position AS apos ON app.after_position = apos.position_id
        JOIN department AS bdep ON app.before_department = bdep.dept_id
        JOIN department AS adep ON app.after_department = adep.dept_id
        <where>
            <if test="request.deptId != null">
                adep.dept_id = #{request.deptId}
            </if>
            <if test="request.positionId != null">
                AND apos.position_id = #{request.positionId}
            </if>
            <if test="request.empId != null">
                AND emp.emp_id = #{request.empId}
            </if>
            <if test="request.empName != null and request.empName != ''">
                AND emp.name = #{request.empName}
            </if>
            <if test="request.type != null">
                AND app.type = #{request.type}
            </if>
            <if test="request.searchStartDate != null">
                AND app.appoint_date &gt;= #{request.searchStartDate}
            </if>
            <if test="request.searchEndDate != null">
                AND app.appoint_date &lt;= #{request.searchEndDate}
            </if>
        </where>
    </select>

</mapper>
