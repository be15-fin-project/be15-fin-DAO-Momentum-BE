<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.momentum.organization.department.query.mapper.DepartmentMapper">
    <select id="getDepartments" resultType="com.dao.momentum.organization.department.query.dto.response.DepartmentInfoDTO">
        SELECT
                dept_id,
                name,
                parent_dept_id
        FROM
                department
        WHERE
                is_deleted = 'N';
    </select>

    <select id="getDepartmentDetail" resultType="com.dao.momentum.organization.department.query.dto.response.DepartmentDetailDTO">
        SELECT
                name,
                contact,
                created_at
        FROM
                department
        WHERE
                dept_id = #{deptId}
    </select>

    <resultMap id="EmployeeSummaryResultMap" type="com.dao.momentum.organization.department.query.dto.response.EmployeeSummaryDTO">
        <id property="empId" column="emp_id"/>
        <result property="name" column="emp_name"/>
        <result property="contact" column="contact"/>
        <result property="status" column="status"/>
    </resultMap>

    <resultMap id="DepartmentNodeResultMap" type="com.dao.momentum.organization.department.query.dto.response.DepartmentNodeDTO">
        <id property="deptId" column="dept_id"/>
        <result property="parentDeptId" column="parent_dept_id"/>
        <result property="deptName" column="dept_name"/>
        <collection property="employees" ofType="com.example.dto.EmployeeSummaryDTO"
                    resultMap="EmployeeSummaryResultMap"/>
    </resultMap>

    <select id="getDepartmentListWithEmployees" resultMap="DepartmentNodeResultMap">
        SELECT
                d.dept_id,
                d.parent_dept_id,
                d.name AS dept_name,
                e.emp_id,
                e.name AS emp_name,
                e.status,
                p.name AS position_name
        FROM department d
        LEFT JOIN employee e ON d.dept_id = e.dept_id AND e.status != 'RESIGNED'
        LEFT JOIN position p ON e.position_id = p.position_id AND p.is_deleted = 'N'
        WHERE d.is_deleted = 'N'
        ORDER BY d.parent_dept_id, d.dept_id
    </select>

    <select id="getLeafDepartment" resultType="com.dao.momentum.organization.department.query.dto.response.LeafDepartmentDTO">
        SELECT
                d.dept_id,
                d.name
        FROM
                Department d
        WHERE
                d.is_deleted = 'N'
        AND
                d.dept_id
        NOT IN (
                SELECT DISTINCT sub.parent_dept_id
                 FROM Department sub
                WHERE sub.parent_dept_id IS NOT NULL
        )

    </select>
</mapper>