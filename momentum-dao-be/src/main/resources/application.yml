spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MariaDBDialect
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 6000ms  # ?? ????
      lettuce:
        pool:
          max-active: 10  # ?? ?? ?? ?
          max-idle: 5  # ?? ?? ?? ?
          min-idle: 1  # ?? ?? ?? ?
          max-wait: 2000ms  # ?? ?? ??

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mappers/**/*.xml
  type-aliases-package: >
    - com.dao.momentum.organization.employee.query.dto

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION} # 30분
  refresh-expiration : ${JWT_REFRESH_EXPIRATION} # 7일

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: dao-momentum
    cloudfront:
      key-pair-id: K2HAOQD1EYCOQG
      domain: momentum-dao.site
      private-key-path: ${CLOUDFRONT_PRIVATE_KEY_PATH}

custom:
  kafka:
    notification-topic: user.notification

naver:
  service:
    url: ${NAVER_URL}
    secret-key: ${NAVER_SECRET_KEY}